

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// Keine modellierte Beschreibung verfügbar
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class ReportingTemplates : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.ReportingTemplates, global::LightSwitchApplication.ReportingTemplates.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initialisiert eine neue Instanz der Entität ReportingTemplates.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ReportingTemplates()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ReportingTemplates(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.ReportingTemplates> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.ReportingTemplates.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReportingTemplates_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReportingTemplates_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Ruft das Application-Objekt für diese Anwendung ab. Das Application-Objekt stellt Zugriff auf aktive Bildschirme, Methoden zum Öffnen von Bildschirmen sowie Zugriff auf den aktuellen Benutzer bereit.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Ruft den übergeordneten Datenarbeitsbereich ab. Der Datenarbeitsbereich stellt Zugriff auf alle Datenquellen in der Anwendung bereit.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// Keine modellierte Beschreibung verfügbar
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return global::LightSwitchApplication.ReportingTemplates.DetailsClass.GetValue(this, global::LightSwitchApplication.ReportingTemplates.DetailsClass.PropertySetProperties.Id);
            }
            set
            {
                global::LightSwitchApplication.ReportingTemplates.DetailsClass.SetValue(this, global::LightSwitchApplication.ReportingTemplates.DetailsClass.PropertySetProperties.Id, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Changed();

        /// <summary>
        /// Keine modellierte Beschreibung verfügbar
        /// </summary>
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public byte[] RowVersion
        {
            get
            {
                return global::LightSwitchApplication.ReportingTemplates.DetailsClass.GetValue(this, global::LightSwitchApplication.ReportingTemplates.DetailsClass.PropertySetProperties.RowVersion);
            }
            set
            {
                global::LightSwitchApplication.ReportingTemplates.DetailsClass.SetValue(this, global::LightSwitchApplication.ReportingTemplates.DetailsClass.PropertySetProperties.RowVersion, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Changed();

        /// <summary>
        /// Keine modellierte Beschreibung verfügbar
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime ReleaseDate
        {
            get
            {
                return global::LightSwitchApplication.ReportingTemplates.DetailsClass.GetValue(this, global::LightSwitchApplication.ReportingTemplates.DetailsClass.PropertySetProperties.ReleaseDate);
            }
            set
            {
                global::LightSwitchApplication.ReportingTemplates.DetailsClass.SetValue(this, global::LightSwitchApplication.ReportingTemplates.DetailsClass.PropertySetProperties.ReleaseDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReleaseDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReleaseDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReleaseDate_Changed();

        /// <summary>
        /// Keine modellierte Beschreibung verfügbar
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public byte[] Template
        {
            get
            {
                return global::LightSwitchApplication.ReportingTemplates.DetailsClass.GetValue(this, global::LightSwitchApplication.ReportingTemplates.DetailsClass.PropertySetProperties.Template);
            }
            set
            {
                global::LightSwitchApplication.ReportingTemplates.DetailsClass.SetValue(this, global::LightSwitchApplication.ReportingTemplates.DetailsClass.PropertySetProperties.Template, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Template_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Template_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Template_Changed();

        /// <summary>
        /// Keine modellierte Beschreibung verfügbar
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Beschreibung
        {
            get
            {
                return global::LightSwitchApplication.ReportingTemplates.DetailsClass.GetValue(this, global::LightSwitchApplication.ReportingTemplates.DetailsClass.PropertySetProperties.Beschreibung);
            }
            set
            {
                global::LightSwitchApplication.ReportingTemplates.DetailsClass.SetValue(this, global::LightSwitchApplication.ReportingTemplates.DetailsClass.PropertySetProperties.Beschreibung, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Beschreibung_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Beschreibung_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Beschreibung_Changed();

        /// <summary>
        /// Keine modellierte Beschreibung verfügbar
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Size
        {
            get
            {
                return global::LightSwitchApplication.ReportingTemplates.DetailsClass.GetValue(this, global::LightSwitchApplication.ReportingTemplates.DetailsClass.PropertySetProperties.Size);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Size_Compute(ref int result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Size_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);

        /// <summary>
        /// Keine modellierte Beschreibung verfügbar
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string OriginalFilename
        {
            get
            {
                return global::LightSwitchApplication.ReportingTemplates.DetailsClass.GetValue(this, global::LightSwitchApplication.ReportingTemplates.DetailsClass.PropertySetProperties.OriginalFilename);
            }
            set
            {
                global::LightSwitchApplication.ReportingTemplates.DetailsClass.SetValue(this, global::LightSwitchApplication.ReportingTemplates.DetailsClass.PropertySetProperties.OriginalFilename, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OriginalFilename_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OriginalFilename_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OriginalFilename_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.ReportingTemplates,
                global::LightSwitchApplication.ReportingTemplates.DetailsClass,
                global::LightSwitchApplication.ReportingTemplates.DetailsClass.IImplementation,
                global::LightSwitchApplication.ReportingTemplates.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.ReportingTemplates, global::LightSwitchApplication.ReportingTemplates.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.ReportingTemplates, global::LightSwitchApplication.ReportingTemplates.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.ReportingTemplates.DetailsClass.PropertySetProperties.Id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.ReportingTemplates, global::LightSwitchApplication.ReportingTemplates.DetailsClass>.Entry
                __ReportingTemplatesEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.ReportingTemplates, global::LightSwitchApplication.ReportingTemplates.DetailsClass>.Entry(
                    global::LightSwitchApplication.ReportingTemplates.DetailsClass.__ReportingTemplates_CreateNew,
                    global::LightSwitchApplication.ReportingTemplates.DetailsClass.__ReportingTemplates_Created,
                    global::LightSwitchApplication.ReportingTemplates.DetailsClass.__ReportingTemplates_AllowSaveWithErrors);
            private static global::LightSwitchApplication.ReportingTemplates __ReportingTemplates_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.ReportingTemplates> es)
            {
                return new global::LightSwitchApplication.ReportingTemplates(es);
            }
            private static void __ReportingTemplates_Created(global::LightSwitchApplication.ReportingTemplates e)
            {
                e.ReportingTemplates_Created();
            }
            private static bool __ReportingTemplates_AllowSaveWithErrors(global::LightSwitchApplication.ReportingTemplates e)
            {
                bool result = false;
                e.ReportingTemplates_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.ReportingTemplates, global::LightSwitchApplication.ReportingTemplates.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.ReportingTemplates, global::LightSwitchApplication.ReportingTemplates.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.ReportingTemplates.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.ReportingTemplates, global::LightSwitchApplication.ReportingTemplates.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReportingTemplates, global::LightSwitchApplication.ReportingTemplates.DetailsClass, int> Id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ReportingTemplates.DetailsClass.PropertySetProperties.Id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReportingTemplates, global::LightSwitchApplication.ReportingTemplates.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReportingTemplates, global::LightSwitchApplication.ReportingTemplates.DetailsClass, byte[]> RowVersion
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ReportingTemplates.DetailsClass.PropertySetProperties.RowVersion) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReportingTemplates, global::LightSwitchApplication.ReportingTemplates.DetailsClass, byte[]>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReportingTemplates, global::LightSwitchApplication.ReportingTemplates.DetailsClass, global::System.DateTime> ReleaseDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ReportingTemplates.DetailsClass.PropertySetProperties.ReleaseDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReportingTemplates, global::LightSwitchApplication.ReportingTemplates.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReportingTemplates, global::LightSwitchApplication.ReportingTemplates.DetailsClass, byte[]> Template
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ReportingTemplates.DetailsClass.PropertySetProperties.Template) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReportingTemplates, global::LightSwitchApplication.ReportingTemplates.DetailsClass, byte[]>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReportingTemplates, global::LightSwitchApplication.ReportingTemplates.DetailsClass, string> Beschreibung
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ReportingTemplates.DetailsClass.PropertySetProperties.Beschreibung) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReportingTemplates, global::LightSwitchApplication.ReportingTemplates.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ReportingTemplates, global::LightSwitchApplication.ReportingTemplates.DetailsClass, int> Size
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ReportingTemplates.DetailsClass.PropertySetProperties.Size) as global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ReportingTemplates, global::LightSwitchApplication.ReportingTemplates.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReportingTemplates, global::LightSwitchApplication.ReportingTemplates.DetailsClass, string> OriginalFilename
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ReportingTemplates.DetailsClass.PropertySetProperties.OriginalFilename) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReportingTemplates, global::LightSwitchApplication.ReportingTemplates.DetailsClass, string>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int Id { get; set; }
                new byte[] RowVersion { get; set; }
                new global::System.DateTime ReleaseDate { get; set; }
                new byte[] Template { get; set; }
                new string Beschreibung { get; set; }
                new string OriginalFilename { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReportingTemplates, global::LightSwitchApplication.ReportingTemplates.DetailsClass, int>.Entry
                    Id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReportingTemplates, global::LightSwitchApplication.ReportingTemplates.DetailsClass, int>.Entry(
                        "Id",
                        global::LightSwitchApplication.ReportingTemplates.DetailsClass.PropertySetProperties._Id_Stub,
                        global::LightSwitchApplication.ReportingTemplates.DetailsClass.PropertySetProperties._Id_ComputeIsReadOnly,
                        global::LightSwitchApplication.ReportingTemplates.DetailsClass.PropertySetProperties._Id_Validate,
                        global::LightSwitchApplication.ReportingTemplates.DetailsClass.PropertySetProperties._Id_GetImplementationValue,
                        global::LightSwitchApplication.ReportingTemplates.DetailsClass.PropertySetProperties._Id_SetImplementationValue,
                        global::LightSwitchApplication.ReportingTemplates.DetailsClass.PropertySetProperties._Id_OnValueChanged);
                private static void _Id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReportingTemplates.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReportingTemplates, global::LightSwitchApplication.ReportingTemplates.DetailsClass, int>.Data> c, global::LightSwitchApplication.ReportingTemplates.DetailsClass d, object sf)
                {
                    c(d, ref d._Id, sf);
                }
                private static bool _Id_ComputeIsReadOnly(global::LightSwitchApplication.ReportingTemplates e)
                {
                    bool result = false;
                    e.Id_IsReadOnly(ref result);
                    return result;
                }
                private static void _Id_Validate(global::LightSwitchApplication.ReportingTemplates e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Id_Validate(r);
                }
                private static int _Id_GetImplementationValue(global::LightSwitchApplication.ReportingTemplates.DetailsClass d)
                {
                    return d.ImplementationEntity.Id;
                }
                private static void _Id_SetImplementationValue(global::LightSwitchApplication.ReportingTemplates.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Id = v;
                }
                private static void _Id_OnValueChanged(global::LightSwitchApplication.ReportingTemplates e)
                {
                    e.Id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReportingTemplates, global::LightSwitchApplication.ReportingTemplates.DetailsClass, byte[]>.Entry
                    RowVersion = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReportingTemplates, global::LightSwitchApplication.ReportingTemplates.DetailsClass, byte[]>.Entry(
                        "RowVersion",
                        global::LightSwitchApplication.ReportingTemplates.DetailsClass.PropertySetProperties._RowVersion_Stub,
                        global::LightSwitchApplication.ReportingTemplates.DetailsClass.PropertySetProperties._RowVersion_ComputeIsReadOnly,
                        global::LightSwitchApplication.ReportingTemplates.DetailsClass.PropertySetProperties._RowVersion_Validate,
                        global::LightSwitchApplication.ReportingTemplates.DetailsClass.PropertySetProperties._RowVersion_GetImplementationValue,
                        global::LightSwitchApplication.ReportingTemplates.DetailsClass.PropertySetProperties._RowVersion_SetImplementationValue,
                        global::LightSwitchApplication.ReportingTemplates.DetailsClass.PropertySetProperties._RowVersion_OnValueChanged);
                private static void _RowVersion_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReportingTemplates.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReportingTemplates, global::LightSwitchApplication.ReportingTemplates.DetailsClass, byte[]>.Data> c, global::LightSwitchApplication.ReportingTemplates.DetailsClass d, object sf)
                {
                    c(d, ref d._RowVersion, sf);
                }
                private static bool _RowVersion_ComputeIsReadOnly(global::LightSwitchApplication.ReportingTemplates e)
                {
                    bool result = false;
                    e.RowVersion_IsReadOnly(ref result);
                    return result;
                }
                private static void _RowVersion_Validate(global::LightSwitchApplication.ReportingTemplates e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RowVersion_Validate(r);
                }
                private static byte[] _RowVersion_GetImplementationValue(global::LightSwitchApplication.ReportingTemplates.DetailsClass d)
                {
                    return d.ImplementationEntity.RowVersion;
                }
                private static void _RowVersion_SetImplementationValue(global::LightSwitchApplication.ReportingTemplates.DetailsClass d, byte[] v)
                {
                    d.ImplementationEntity.RowVersion = v;
                }
                private static void _RowVersion_OnValueChanged(global::LightSwitchApplication.ReportingTemplates e)
                {
                    e.RowVersion_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReportingTemplates, global::LightSwitchApplication.ReportingTemplates.DetailsClass, global::System.DateTime>.Entry
                    ReleaseDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReportingTemplates, global::LightSwitchApplication.ReportingTemplates.DetailsClass, global::System.DateTime>.Entry(
                        "ReleaseDate",
                        global::LightSwitchApplication.ReportingTemplates.DetailsClass.PropertySetProperties._ReleaseDate_Stub,
                        global::LightSwitchApplication.ReportingTemplates.DetailsClass.PropertySetProperties._ReleaseDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.ReportingTemplates.DetailsClass.PropertySetProperties._ReleaseDate_Validate,
                        global::LightSwitchApplication.ReportingTemplates.DetailsClass.PropertySetProperties._ReleaseDate_GetImplementationValue,
                        global::LightSwitchApplication.ReportingTemplates.DetailsClass.PropertySetProperties._ReleaseDate_SetImplementationValue,
                        global::LightSwitchApplication.ReportingTemplates.DetailsClass.PropertySetProperties._ReleaseDate_OnValueChanged);
                private static void _ReleaseDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReportingTemplates.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReportingTemplates, global::LightSwitchApplication.ReportingTemplates.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.ReportingTemplates.DetailsClass d, object sf)
                {
                    c(d, ref d._ReleaseDate, sf);
                }
                private static bool _ReleaseDate_ComputeIsReadOnly(global::LightSwitchApplication.ReportingTemplates e)
                {
                    bool result = false;
                    e.ReleaseDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _ReleaseDate_Validate(global::LightSwitchApplication.ReportingTemplates e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ReleaseDate_Validate(r);
                }
                private static global::System.DateTime _ReleaseDate_GetImplementationValue(global::LightSwitchApplication.ReportingTemplates.DetailsClass d)
                {
                    return d.ImplementationEntity.ReleaseDate;
                }
                private static void _ReleaseDate_SetImplementationValue(global::LightSwitchApplication.ReportingTemplates.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.ReleaseDate = global::LightSwitchApplication.ReportingTemplates.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _ReleaseDate_OnValueChanged(global::LightSwitchApplication.ReportingTemplates e)
                {
                    e.ReleaseDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReportingTemplates, global::LightSwitchApplication.ReportingTemplates.DetailsClass, byte[]>.Entry
                    Template = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReportingTemplates, global::LightSwitchApplication.ReportingTemplates.DetailsClass, byte[]>.Entry(
                        "Template",
                        global::LightSwitchApplication.ReportingTemplates.DetailsClass.PropertySetProperties._Template_Stub,
                        global::LightSwitchApplication.ReportingTemplates.DetailsClass.PropertySetProperties._Template_ComputeIsReadOnly,
                        global::LightSwitchApplication.ReportingTemplates.DetailsClass.PropertySetProperties._Template_Validate,
                        global::LightSwitchApplication.ReportingTemplates.DetailsClass.PropertySetProperties._Template_GetImplementationValue,
                        global::LightSwitchApplication.ReportingTemplates.DetailsClass.PropertySetProperties._Template_SetImplementationValue,
                        global::LightSwitchApplication.ReportingTemplates.DetailsClass.PropertySetProperties._Template_OnValueChanged);
                private static void _Template_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReportingTemplates.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReportingTemplates, global::LightSwitchApplication.ReportingTemplates.DetailsClass, byte[]>.Data> c, global::LightSwitchApplication.ReportingTemplates.DetailsClass d, object sf)
                {
                    c(d, ref d._Template, sf);
                }
                private static bool _Template_ComputeIsReadOnly(global::LightSwitchApplication.ReportingTemplates e)
                {
                    bool result = false;
                    e.Template_IsReadOnly(ref result);
                    return result;
                }
                private static void _Template_Validate(global::LightSwitchApplication.ReportingTemplates e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Template_Validate(r);
                }
                private static byte[] _Template_GetImplementationValue(global::LightSwitchApplication.ReportingTemplates.DetailsClass d)
                {
                    return d.ImplementationEntity.Template;
                }
                private static void _Template_SetImplementationValue(global::LightSwitchApplication.ReportingTemplates.DetailsClass d, byte[] v)
                {
                    d.ImplementationEntity.Template = v;
                }
                private static void _Template_OnValueChanged(global::LightSwitchApplication.ReportingTemplates e)
                {
                    e.Template_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReportingTemplates, global::LightSwitchApplication.ReportingTemplates.DetailsClass, string>.Entry
                    Beschreibung = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReportingTemplates, global::LightSwitchApplication.ReportingTemplates.DetailsClass, string>.Entry(
                        "Beschreibung",
                        global::LightSwitchApplication.ReportingTemplates.DetailsClass.PropertySetProperties._Beschreibung_Stub,
                        global::LightSwitchApplication.ReportingTemplates.DetailsClass.PropertySetProperties._Beschreibung_ComputeIsReadOnly,
                        global::LightSwitchApplication.ReportingTemplates.DetailsClass.PropertySetProperties._Beschreibung_Validate,
                        global::LightSwitchApplication.ReportingTemplates.DetailsClass.PropertySetProperties._Beschreibung_GetImplementationValue,
                        global::LightSwitchApplication.ReportingTemplates.DetailsClass.PropertySetProperties._Beschreibung_SetImplementationValue,
                        global::LightSwitchApplication.ReportingTemplates.DetailsClass.PropertySetProperties._Beschreibung_OnValueChanged);
                private static void _Beschreibung_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReportingTemplates.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReportingTemplates, global::LightSwitchApplication.ReportingTemplates.DetailsClass, string>.Data> c, global::LightSwitchApplication.ReportingTemplates.DetailsClass d, object sf)
                {
                    c(d, ref d._Beschreibung, sf);
                }
                private static bool _Beschreibung_ComputeIsReadOnly(global::LightSwitchApplication.ReportingTemplates e)
                {
                    bool result = false;
                    e.Beschreibung_IsReadOnly(ref result);
                    return result;
                }
                private static void _Beschreibung_Validate(global::LightSwitchApplication.ReportingTemplates e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Beschreibung_Validate(r);
                }
                private static string _Beschreibung_GetImplementationValue(global::LightSwitchApplication.ReportingTemplates.DetailsClass d)
                {
                    return d.ImplementationEntity.Beschreibung;
                }
                private static void _Beschreibung_SetImplementationValue(global::LightSwitchApplication.ReportingTemplates.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Beschreibung = v;
                }
                private static void _Beschreibung_OnValueChanged(global::LightSwitchApplication.ReportingTemplates e)
                {
                    e.Beschreibung_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ReportingTemplates, global::LightSwitchApplication.ReportingTemplates.DetailsClass, int>.Entry
                    Size = new global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ReportingTemplates, global::LightSwitchApplication.ReportingTemplates.DetailsClass, int>.Entry(
                        "Size",
                        global::LightSwitchApplication.ReportingTemplates.DetailsClass.PropertySetProperties._Size_Stub,
                        global::LightSwitchApplication.ReportingTemplates.DetailsClass.PropertySetProperties._Size_Validate,
                        global::LightSwitchApplication.ReportingTemplates.DetailsClass.PropertySetProperties._Size_ComputeValue);
                private static void _Size_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReportingTemplates.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ReportingTemplates, global::LightSwitchApplication.ReportingTemplates.DetailsClass, int>.Data> c, global::LightSwitchApplication.ReportingTemplates.DetailsClass d, object sf)
                {
                    c(d, ref d._Size, sf);
                }
                private static void _Size_Validate(global::LightSwitchApplication.ReportingTemplates e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Size_Validate(r);
                }
                private static int _Size_ComputeValue(global::LightSwitchApplication.ReportingTemplates e)
                {
                    int value = default(int);
                    e.Size_Compute(ref value);
                    return value;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReportingTemplates, global::LightSwitchApplication.ReportingTemplates.DetailsClass, string>.Entry
                    OriginalFilename = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReportingTemplates, global::LightSwitchApplication.ReportingTemplates.DetailsClass, string>.Entry(
                        "OriginalFilename",
                        global::LightSwitchApplication.ReportingTemplates.DetailsClass.PropertySetProperties._OriginalFilename_Stub,
                        global::LightSwitchApplication.ReportingTemplates.DetailsClass.PropertySetProperties._OriginalFilename_ComputeIsReadOnly,
                        global::LightSwitchApplication.ReportingTemplates.DetailsClass.PropertySetProperties._OriginalFilename_Validate,
                        global::LightSwitchApplication.ReportingTemplates.DetailsClass.PropertySetProperties._OriginalFilename_GetImplementationValue,
                        global::LightSwitchApplication.ReportingTemplates.DetailsClass.PropertySetProperties._OriginalFilename_SetImplementationValue,
                        global::LightSwitchApplication.ReportingTemplates.DetailsClass.PropertySetProperties._OriginalFilename_OnValueChanged);
                private static void _OriginalFilename_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReportingTemplates.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReportingTemplates, global::LightSwitchApplication.ReportingTemplates.DetailsClass, string>.Data> c, global::LightSwitchApplication.ReportingTemplates.DetailsClass d, object sf)
                {
                    c(d, ref d._OriginalFilename, sf);
                }
                private static bool _OriginalFilename_ComputeIsReadOnly(global::LightSwitchApplication.ReportingTemplates e)
                {
                    bool result = false;
                    e.OriginalFilename_IsReadOnly(ref result);
                    return result;
                }
                private static void _OriginalFilename_Validate(global::LightSwitchApplication.ReportingTemplates e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.OriginalFilename_Validate(r);
                }
                private static string _OriginalFilename_GetImplementationValue(global::LightSwitchApplication.ReportingTemplates.DetailsClass d)
                {
                    return d.ImplementationEntity.OriginalFilename;
                }
                private static void _OriginalFilename_SetImplementationValue(global::LightSwitchApplication.ReportingTemplates.DetailsClass d, string v)
                {
                    d.ImplementationEntity.OriginalFilename = v;
                }
                private static void _OriginalFilename_OnValueChanged(global::LightSwitchApplication.ReportingTemplates e)
                {
                    e.OriginalFilename_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReportingTemplates, global::LightSwitchApplication.ReportingTemplates.DetailsClass, int>.Data _Id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReportingTemplates, global::LightSwitchApplication.ReportingTemplates.DetailsClass, byte[]>.Data _RowVersion;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReportingTemplates, global::LightSwitchApplication.ReportingTemplates.DetailsClass, global::System.DateTime>.Data _ReleaseDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReportingTemplates, global::LightSwitchApplication.ReportingTemplates.DetailsClass, byte[]>.Data _Template;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReportingTemplates, global::LightSwitchApplication.ReportingTemplates.DetailsClass, string>.Data _Beschreibung;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ReportingTemplates, global::LightSwitchApplication.ReportingTemplates.DetailsClass, int>.Data _Size;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReportingTemplates, global::LightSwitchApplication.ReportingTemplates.DetailsClass, string>.Data _OriginalFilename;
            
        }
    
        #endregion
    }
    
    #endregion
}
